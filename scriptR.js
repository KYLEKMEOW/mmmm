// –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –æ–± –∏–≥—Ä–æ–∫–∞—Ö
const players = [
    { name: 'üõ°Ô∏èüíó‚òÉÔ∏èü´Çüëóü™ôüëëüßë‚Äçüíªüíò‚ùÑÔ∏èKYLEK_MEOW', score: 7307642 },
    { name: 'üíó‚òÉÔ∏èüëóü™ôüëëüßë‚Äçüíªüíò‚ùÑÔ∏èGoGoMeMe', score: 810465 },
    { name: 'üõ°Ô∏èüíó‚òÉÔ∏èü´Çüëóü™ôüëëüßë‚Äçüíªüíò‚ùÑÔ∏èHola COLA', score: 3225625 },
    { name: 'üíó‚òÉÔ∏èüëóü™ôüëëüßë‚Äçüíªüíò‚ùÑÔ∏èJoline', score: 603205 },
    { name: 'üíó‚òÉÔ∏èüëóü™ôüëëüßë‚Äçüíªüíò‚ùÑÔ∏èPell', score: 7424019 },
    { name: '‚ùìüõ°Ô∏èüíó‚òÉÔ∏èGameOON!', score: 336273 },
    { name: 'ü¶âüíó‚òÉÔ∏èüëóü™ô‚úíÔ∏è‚ìÇAmnistaria', score: 0 },
	{ name: 'ü¶â‚ìÇShaSha', score: 0 },
	{ name: 'Ô∏èKisylya', score: 7570422 },
	{ name: 'Ô∏èMYrMeOW', score: 10452110 },
    { name: 'üõ°Ô∏è[KM] KYLKIüõ°Ô∏è', score: 0 }, // 3 
    { name: '[–ö—É–∫—É]–ö—É–∫—É—Å–∏–∫–∏', score: 0 }, // 3
];

const targetScore = 50000000; // 50 000 000, 500 000 000, 5 000 000 000, 35 000 000 000, 300 000 000 000
const rewardAmount = 150; // 150, 330, 400, 450, 500
let totalScore = 0;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª
function formatNumber(number) {
    return number.toLocaleString();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–ø–∞ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function updateTopPlayers() {
    const playerListBody = document.getElementById('playerListBody');
    const progressFillElement = document.getElementById('progressFill');
    const goalCountElement = document.getElementById('goalCount');
    const rewardElement = document.getElementById('reward');
    const lastUpdateElement = document.getElementById('lastUpdate');

    playerListBody.innerHTML = '';
    totalScore = 0;

    // –£—Å—Ç–∞–Ω–æ–≤–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ç–æ–ø–µ
    const topPlayersCount = 11;

    // –§–∏–ª—å—Ç—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, —É –∫–æ–≥–æ score –±–æ–ª—å—à–µ 0
    const topPlayers = players.filter(player => player.score > 0);

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —É–±—ã–≤–∞–Ω–∏—é –æ—á–∫–æ–≤
    topPlayers.sort((a, b) => b.score - a.score);

    for (let index = 0; index < Math.min(topPlayersCount, topPlayers.length); index++) {
        const position = index + 1;
        const player = topPlayers[index];
        const row = `<tr>
                        <td>${position}</td>
                        <td>${player.name}</td>
                        <td>${formatNumber(player.score)}</td>
                    </tr>`;
        playerListBody.innerHTML += row;
        totalScore += player.score;
    }

    const progressPercentage = (totalScore / targetScore) * 100;
    progressFillElement.style.width = `${progressPercentage}%`;
    goalCountElement.innerText = formatNumber(totalScore);


    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–ª–∏
    const targetElement = document.getElementById('target');
    const remainingGoal = targetScore - totalScore;
    targetElement.innerText = formatNumber(remainingGoal);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–µ–ª–∏
    if (totalScore >= targetScore) {
        goalCountElement.classList.add('goal-achieved');
        targetElement.classList.add('goal-achieved');
        goalCountElement.innerText = '–¶–µ–ª—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!';
        rewardElement.innerText = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—à–ª–∏ –¥–æ —Ü–µ–ª–∏, –∑–∞ —ç—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: —Ö${formatNumber(rewardAmount)} –∑–æ–ª–æ—Ç–∞.`;
    } else {
        goalCountElement.classList.remove('goal-achieved');
        targetElement.classList.remove('goal-achieved');
        rewardElement.innerText = `–ù–∞–≥—Ä–∞–¥–∞: —Ö${formatNumber(rewardAmount)} –ó–æ–ª–æ—Ç–∞ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏!`;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const now = new Date();
    const lastUpdateString = formatLastUpdate(now);
    lastUpdateElement.innerText = lastUpdateString;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
function formatLastUpdate(date) {
    const options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };
    const formattedDate = new Intl.DateTimeFormat('ru-RU', options).format(date);
    return ` ${formattedDate} `;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
updateTopPlayers();

// –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
const eventEndDate = new Date('2024-02-02T19:00:00');
const countdownElement = document.getElementById('countdown');

function updateCountdown() {
    const now = new Date();
    const timeRemaining = eventEndDate - now;

    if (timeRemaining > 0) {
        const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);

        countdownElement.innerText = `–î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≤–µ–Ω—Ç–∞: ${days} –¥–Ω. ${hours} —á. ${minutes} –º–∏–Ω. ${seconds} —Å–µ–∫.`;
    } else {
        countdownElement.innerText = '–ò–≤–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!';
    }
}

setInterval(updateCountdown, 1000);

document.addEventListener("DOMContentLoaded", function() {
  const loadingContainer = document.querySelector('.loading-container');
  const progressBar = document.getElementById('progressBar');

  function simulateLoading() {
    let progress = 0;
    const interval = setInterval(function() {
      progress += 100 / 3; // –ü—Ä–æ–≥—Ä–µ—Å—Å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 100 / 14 –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
      progressBar.style.width = `${progress}%`;

      if (progress >= 100) {
        clearInterval(interval);
        // –°–∫—Ä—ã—Ç–∏–µ —Ñ–æ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        loadingContainer.style.visibility = 'hidden';
      }
    }, 1000);
  }

  simulateLoading();
});